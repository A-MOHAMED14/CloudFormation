AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation for VPC"

Resources:
  # My VPC
  MyVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "172.16.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  # Public Subnet in AZ 1
  PublicSubnet2A:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.1.0/24"
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2A

  # Public Subnet in AZ 2
  PublicSubnet2B:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.4.0/24"
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2B

  # Internet Gateway
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: MyVPC-IGW

  # Attach the Internet Gateway to the VPC
  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  # Publics Routes
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Public Subnet 2A Route Table Association
  PublicSubnet2ARouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet2A
      RouteTableId: !Ref PublicRouteTable

  # Public Subnet 2B Route Table Association
  PublicSubnet2BRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet2B
      RouteTableId: !Ref PublicRouteTable

  # Application Load Balancer
  MyLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Subnets:
        - !Ref PublicSubnet2A
        - !Ref PublicSubnet2B
      SecurityGroups:
        - !Ref WebServerSecurityGroup

  # Target Group for ALB
  MyTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      VpcId: !Ref MyVPC
      Port: 80
      Protocol: "HTTP"

  # Listener for ALB
  MyListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: "forward"
      TargetGroupArn: !Ref MyTargetGroup
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: "HTTP"

  # Web Server & ALB Security Group
  WebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable HTTP Access"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"

  # WebServerInstance2A
  WebServerInstance2A:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      ImageId: "ami-0fc32db49bc3bfbb1"
      SubnetId: !Ref PublicSubnet2A
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: "Name"
          Value: "WebServerInstance2A"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash  
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "Hello from my Web Server 2A" > /var/www/html/index.html

  # WebServerInstance2B
  WebServerInstance2B:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      ImageId: "ami-0fc32db49bc3bfbb1"
      SubnetId: !Ref PublicSubnet2B
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: "Name"
          Value: "WebServerInstance2B"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash  
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "Hello from my Web Server 2B" > /var/www/html/index.html
