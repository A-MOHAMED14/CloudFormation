AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation for VPC"

Resources:
  # My VPC
  MyVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "172.16.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  # Public Subnet in AZ 1
  PublicSubnet2A:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.1.0/24"
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2A

  # App Private Subnet in AZ 1
  AppPrivateSubnet2A:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.2.0/24"
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: AppPrivateSubnet2A

  # Database Private Subnet in AZ 1
  DatabasePrivateSubnet2A:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.3.0/24"
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: DatabasePrivateSubnet2A

  # Public Subnet in AZ 2
  PublicSubnet2B:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.4.0/24"
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2B

  # App Private Subnet in AZ 2
  AppPrivateSubnet2B:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.5.0/24"
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: AppPrivateSubnet2B

  # Database Private Subnet in AZ 2
  DatabasePrivateSubnet2B:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.6.0/24"
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: DatabasePrivateSubnet2B

  # Internet Gateway
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: MyVPC-IGW

  # Attach the Internet Gateway to the VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  # Publics Routes
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Public Subnet 2A Route Table Association
  PublicSubnet2ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2A
      RouteTableId: !Ref PublicRouteTable

  # Public Subnet 2B Route Table Association
  PublicSubnet2BRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2B
      RouteTableId: !Ref PublicRouteTable

  # Bastion Host EC2
  BastionHost:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: t2.micro
      KeyName: bastion
      ImageId: ami-0fc32db49bc3bfbb1
      SubnetId: !Ref PublicSubnet2A
      SecurityGroupIds:
        - !Ref BastionSG
      Tags:
        - Key: Name
          Value: BastionHost

  # Bastion Security Group
  BastionSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable SSH access"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 109.146.184.28/32

    # AppInstance2A
    AppInstance2A:
      Type: "AWS::EC2::Instance"
      Properties:
        InstanceType: "t2.micro"
        KeyName: !Ref bastion
        ImageId: ami-0fc32db49bc3bfbb1
        SubnetId: !Ref AppPrivateSubnet2A
        SecurityGroupIds:
          - !Ref AppInstance2ASG
        Tags:
          - Key: Name
            Value: App2A

    # AppInstance2B
    AppInstance2B:
      Type: "AWS::EC2::Instance"
      Properties:
        InstanceType: "t2.micro"
        ImageId: ami-0fc32db49bc3bfbb1
        SubnetId: !Ref AppPrivateSubnet2B
        SecurityGroupIds:
          - !Ref AppInstance2BSG
        Tags:
          - Key: Name
            Value: App2B

    # SG App 2A
    AppInstance2ASG:
      Type: "AWS::EC2::SecurityGroup"
      Properties:
        GroupDescription: "Allow SSH from Bastion"
        VpcId: !Ref MyVPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            SourceSecurityGroupId: !Ref BastionSG

    # SG App 2B
    AppInstance2BSG:
      Type: "AWS::EC2::SecurityGroup"
      Properties:
        GroupDescription: "Allow ICMP Ping from Private App 2A"
        VpcId: !Ref MyVPC
        SecurityGroupIngress:
          - IpProtocol: icmp
            FromPort: -1
            ToPort: -1
            SourceSecurityGroupId: !Ref AppInstance2ASG
